syntax = "proto3";

import "spacemesh/v1/types.proto";

package spacemesh.v1;

message GetRequest {
    bytes id = 1;
}

message GetResponse {
    Activation atx = 1;
    MalfeasanceProof malfeasance_proof = 2;
}

message HighestResponse {
    Activation atx = 1;
}

message ActivationStreamResponse {
    ActivationV1 v1 = 1;
}

message ActivationV1 {
    bytes id = 1;
    bytes node_id = 2;
    bytes signature = 3;
    uint32 publish_epoch = 4;
    uint64 sequence = 5;
    bytes prev_atx = 6;
    bytes positioning_atx = 7;
    bytes committment_atx = 8;
    Post initial_post = 9;
    string coinbase = 10;
    uint32 units = 11;
    uint32 base_tick = 12;
    uint32 ticks = 13;
    PoetProof poet_proof = 14;
    Post post = 15;
    VRFPostIndex vrf_post_index = 16;
}

message VRFPostIndex {
    uint64 nonce = 1;
}

message PoetProof {
    repeated bytes proof_nodes = 1;
    uint64 leaf = 2;
}


message PostMeta {
    bytes challenge = 1;
    uint64 labels = 2;
}

message Post {
    uint32 nonce = 1;
    bytes indices = 2;
    uint64 pow = 3;
}

message ActivationStreamRequest {
    EpochFilter epochs = 1;
    IDFilter id = 2;
    NodeIDFilter node_id = 3;
    // CoinbaseFilter is not supported by database index and will result in sequential scan.
    // Apply EpochFilter together with CoinbaseFilter for better performance.
    CoinbaseFilter coinbase = 4;
    bool watch = 5;
}

message EpochFilter {
    uint32 start_epoch = 1;
    uint32 end_epoch = 2;
}

message IDFilter {
    bytes id = 1;
}

message NodeIDFilter {
    bytes node_id = 1;
}

message CoinbaseFilter {
    string coinbase = 1;
}