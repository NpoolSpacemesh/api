syntax = "proto3";
package spacemesh;
import "google/protobuf/empty.proto";
import "spacemesh/types.proto";

// Readonly API for basic mesh info
service MeshService {
    // Network genesis time as unix epoch time
    rpc GenesisTime(google.protobuf.Empty) returns (SimpleInt);

    // Current layer number
    rpc CurrentLayer(google.protobuf.Empty) returns (SimpleInt);

    // Current epoch number
    rpc CurrentEpoch(google.protobuf.Empty) returns (SimpleInt);

    // Network ID
    rpc NetId(google.protobuf.Empty) returns (SimpleInt);

    // Number of layers per epoch (a network parameter)
    rpc EpochNumLayers(google.protobuf.Empty) returns (SimpleInt);

    ////////// Methods designed for light-weight clients such as wallets.
    ////////// Please don't use in clients such as dash, explore or backup. Use
    ////////// streams for these.

    // Get transactions to an account or from an account
    rpc AccountTransactions(AccountIdWithOffset) returns (Transactions);

    ////////// Streams

    // A stream of new txs (or update to a tx data) where the account is sender or receiver. These should include activation transations (ATXs) and all transactions in the mesh
    rpc AccountTransactionStream(AccountId) returns (stream Transaction);

    // Layer with blocks and transactions.
    // Sent each time layer data changes. Designed for heavy-duty clients.
    rpc LayerStream(google.protobuf.Empty) returns (stream Layer);
}
