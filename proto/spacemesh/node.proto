syntax = "proto3";
package spacemesh;
import "google/protobuf/empty.proto";
import "spacemesh/types.proto";

// Readonly basic node data
service NodeService {

    ////////// Node facade

    // A simple test endpoint
    rpc NodeEcho(SimpleString) returns (SimpleString);

    // Returns the version of the node software as a semver string
    rpc NodeVersion(google.protobuf.Empty) returns (SimpleString);

    // Returns the version of the github tag or branch used to build the node
    rpc NodeBuild(google.protobuf.Empty) returns (SimpleString);

    // Returns node status
    rpc NodeStatus(google.protobuf.Empty) returns (NodeStatus);

    // Request the node to start syncing the mesh
    rpc NodeSyncStart(google.protobuf.Empty) returns (google.protobuf.Empty);

    // Initite node gracefull shitodwn
    rpc NodeShutdown(google.protobuf.Empty) returns (google.protobuf.Empty);

    ////////// Node streaming data

    // Sync status events
    rpc NodeSyncStatusStream(google.protobuf.Empty) returns (stream NodeSyncStatus);

    // Node error events
    rpc NodeErrorsStream(google.protobuf.Empty) returns (stream NodeError);

}
