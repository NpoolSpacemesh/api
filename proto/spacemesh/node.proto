syntax = "proto3";
package spacemesh;
import "google/protobuf/empty.proto";
import "spacemesh/types.proto";

// Readonly basic node data
service NodeService {
    // A simple test endpoint
    rpc Echo(SimpleString) returns (SimpleString);

    // Returns the version of the node software as a semver string
    rpc Version(google.protobuf.Empty) returns (SimpleString);

    // Returns the version of the github tag or branch used to build the node
    rpc Build(google.protobuf.Empty) returns (SimpleString);

    //  Current node status (net and sync)
    rpc Status(google.protobuf.Empty) returns (NodeStatus);

    // Request the node to start syncing the mesh
    rpc SyncStart(google.protobuf.Empty) returns (google.protobuf.Empty);

    // Initiate graceful shutdown
    rpc Shutdown(google.protobuf.Empty) returns (google.protobuf.Empty);

    ////////// Node streaming data

    // Node status events (sync and net)
    rpc StatusStream(google.protobuf.Empty) returns (stream NodeStatus);

    // Node error events
    rpc ErrorStream(google.protobuf.Empty) returns (stream NodeError);
}
