syntax = "proto3";
package spacemesh;
import "google/protobuf/empty.proto";
import "spacemesh/types.proto";
import "spacemesh/smesher_types.proto";

// Readonly basic node data
service SmesherService {

    // Smeshing and post state
    rpc SmeshingState(google.protobuf.Empty) returns (SmeshingState);
    rpc PostData(google.protobuf.Empty) returns (PostData);

    rpc IsSmeshing(google.protobuf.Empty) returns (BoolResult);

    // Returns a list of available post processors (including CPU as fallback)
    rpc PostInitProcessor(google.protobuf.Empty) returns (PostProcessors);

    // Start smeshing using the user provided post init data
    rpc StartSmeshing(PostUserData) returns (BoolResult);

    // Stop smeshing and optionally attempt to delete post init file(s)
    rpc StopSmeshing(StopSmeshingArgs) returns (BoolResult);

    // Coinbase commands
    rpc Coinbase(google.protobuf.Empty) returns (AccountId);
    rpc SetCoinbase(AccountId) returns (BoolResult);

    // Get the current smesher id generated by the node
    rpc SmesherId(google.protobuf.Empty) returns (AccountId);

    //// Streams

    // A stream of post data changes. e.g. bytes written to commitment file during init phase
    rpc PostDataStream(google.protobuf.Empty) returns (PostData);

}
