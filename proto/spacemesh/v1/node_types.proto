syntax = "proto3";
package spacemesh.v1;
option go_package = "github.com/spacemeshos/api/release/go/spacemesh/v1";
import "spacemesh/v1/types.proto";
import "google/rpc/status.proto";

message EchoRequest {
    SimpleString msg = 1;
}

message EchoResponse {
    SimpleString msg = 1;
}

message VersionResponse {
    SimpleString version_string = 1;
}

message BuildResponse {
    SimpleString build_string = 1;
}

message SyncStartRequest {}

message SyncStartResponse {
    google.rpc.Status status = 1;
}

message ShutdownRequest {}

message ShutdownResponse {
    google.rpc.Status status = 1;
}

// current node status
message NodeStatus {
    uint64 connected_peers = 1; // number of connected neighbors
    bool   is_synced = 2; // true when meshed is synced
    uint64 synced_layer = 3; // the last layer node has synced
    uint64 top_layer = 4; // top layer is the tip
    uint64 verified_layer = 5; // the last layer node has verified
}

message StatusRequest {}

message StatusResponse {
    NodeStatus status = 1;
}

message StatusStreamRequest {}

message StatusStreamResponse {
    NodeStatus status = 1;
}

message NodeError {
    enum NodeErrorLevel {
        NODE_ERROR_LEVEL_UNSPECIFIED = 0;
        NODE_ERROR_LEVEL_DEBUG = 1;
        NODE_ERROR_LEVEL_INFO = 2;
        NODE_ERROR_LEVEL_WARN = 3;
        NODE_ERROR_LEVEL_ERROR = 4;
        NODE_ERROR_LEVEL_DPANIC = 5;
        NODE_ERROR_LEVEL_PANIC = 6;
        NODE_ERROR_LEVEL_FATAL = 7;
    }
    NodeErrorLevel level = 1;
    string message = 2;
    string stack_trace = 3;
}

message ErrorStreamRequest {}

message ErrorStreamResponse {
    NodeError error = 1;
}

