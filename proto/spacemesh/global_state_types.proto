syntax = "proto3";
package spacemesh;
import "spacemesh/types.proto";


// Data items related to an account
enum AccountDataFlag {
    NONE = 0;
    TRANSACTION_RECEIPT = 1; // tx receipt for a tx to or from an account
    REWARD = 2; // reward awarded to an account
    ACCOUNT = 4; // account data changes (counter or balance)
}

message AccountDataParams {
    AccountId account_id = 1;
    uint32 account_data_flags = 2; // bit field of AccountDataFlag
}

message AccountDataQueryParams {
    AccountDataParams account_data = 1;
    uint32 max_results = 2; // max numbers of results client would like to get
    uint32 offset = 3; // return results from offset
}

// An account related data item
message AccountData {
    oneof item {
        Reward reward = 1;
        TransactionReceipt receipt = 2;
        Account account = 3;
    }
}

message AccountDataQueryResults {
    uint32 total_results = 1;
    repeated AccountData account_item = 2;
}

message SmesherDataQueryParams {
    SmesherId smesher_id = 1;
    uint32 max_results = 2; // max numbers of results client would like to get
    uint32 offset = 3; // return results from offset
}

message SmesherDataQueryResults {
    uint32 total_results = 1;
    repeated Reward rewards = 2;
}

enum GlobalStateDataItemFlag {
    NONE = 0;
    TRANSACTION_RECEIPT = 1; // tx receipt generated
    REWARD = 2; // reward awarded to an account
    ACCOUNT = 4; // An account data changes (counter or balance)
    GLOBAL_STATE_HASH = 8; //
}

message GlobalStateHash {
    bytes root_hash = 1;
    uint64 layer_number = 2;
}

message GlobalStateStreamParams {
    uint32 global_state_data_item_flags = 1; // bit field of GlobalStateDataItemFlag
}

message GlobalStateDataItem {
    oneof data {
        Reward reward = 1;
        TransactionReceipt receipt = 2;
        Account account = 3;
        GlobalStateHash global_state = 4;
    }
}

message GlboalStateStreamResponse {
    repeated GlobalStateDataItem data_item = 1;
}
